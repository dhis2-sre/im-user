// Code generated by go-swagger; DO NOT EDIT.

package administrative

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PostGroupsGroupIDClusterConfigurationReader is a Reader for the PostGroupsGroupIDClusterConfiguration structure.
type PostGroupsGroupIDClusterConfigurationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostGroupsGroupIDClusterConfigurationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostGroupsGroupIDClusterConfigurationCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostGroupsGroupIDClusterConfigurationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostGroupsGroupIDClusterConfigurationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewPostGroupsGroupIDClusterConfigurationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostGroupsGroupIDClusterConfigurationCreated creates a PostGroupsGroupIDClusterConfigurationCreated with default headers values
func NewPostGroupsGroupIDClusterConfigurationCreated() *PostGroupsGroupIDClusterConfigurationCreated {
	return &PostGroupsGroupIDClusterConfigurationCreated{}
}

/* PostGroupsGroupIDClusterConfigurationCreated describes a response with status code 201, with default header values.

Created
*/
type PostGroupsGroupIDClusterConfigurationCreated struct {
	Payload interface{}
}

func (o *PostGroupsGroupIDClusterConfigurationCreated) Error() string {
	return fmt.Sprintf("[POST /groups/{groupId}/cluster-configuration][%d] postGroupsGroupIdClusterConfigurationCreated  %+v", 201, o.Payload)
}
func (o *PostGroupsGroupIDClusterConfigurationCreated) GetPayload() interface{} {
	return o.Payload
}

func (o *PostGroupsGroupIDClusterConfigurationCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGroupsGroupIDClusterConfigurationBadRequest creates a PostGroupsGroupIDClusterConfigurationBadRequest with default headers values
func NewPostGroupsGroupIDClusterConfigurationBadRequest() *PostGroupsGroupIDClusterConfigurationBadRequest {
	return &PostGroupsGroupIDClusterConfigurationBadRequest{}
}

/* PostGroupsGroupIDClusterConfigurationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostGroupsGroupIDClusterConfigurationBadRequest struct {
	Payload interface{}
}

func (o *PostGroupsGroupIDClusterConfigurationBadRequest) Error() string {
	return fmt.Sprintf("[POST /groups/{groupId}/cluster-configuration][%d] postGroupsGroupIdClusterConfigurationBadRequest  %+v", 400, o.Payload)
}
func (o *PostGroupsGroupIDClusterConfigurationBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *PostGroupsGroupIDClusterConfigurationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGroupsGroupIDClusterConfigurationForbidden creates a PostGroupsGroupIDClusterConfigurationForbidden with default headers values
func NewPostGroupsGroupIDClusterConfigurationForbidden() *PostGroupsGroupIDClusterConfigurationForbidden {
	return &PostGroupsGroupIDClusterConfigurationForbidden{}
}

/* PostGroupsGroupIDClusterConfigurationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostGroupsGroupIDClusterConfigurationForbidden struct {
	Payload interface{}
}

func (o *PostGroupsGroupIDClusterConfigurationForbidden) Error() string {
	return fmt.Sprintf("[POST /groups/{groupId}/cluster-configuration][%d] postGroupsGroupIdClusterConfigurationForbidden  %+v", 403, o.Payload)
}
func (o *PostGroupsGroupIDClusterConfigurationForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *PostGroupsGroupIDClusterConfigurationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGroupsGroupIDClusterConfigurationUnsupportedMediaType creates a PostGroupsGroupIDClusterConfigurationUnsupportedMediaType with default headers values
func NewPostGroupsGroupIDClusterConfigurationUnsupportedMediaType() *PostGroupsGroupIDClusterConfigurationUnsupportedMediaType {
	return &PostGroupsGroupIDClusterConfigurationUnsupportedMediaType{}
}

/* PostGroupsGroupIDClusterConfigurationUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type
*/
type PostGroupsGroupIDClusterConfigurationUnsupportedMediaType struct {
	Payload interface{}
}

func (o *PostGroupsGroupIDClusterConfigurationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /groups/{groupId}/cluster-configuration][%d] postGroupsGroupIdClusterConfigurationUnsupportedMediaType  %+v", 415, o.Payload)
}
func (o *PostGroupsGroupIDClusterConfigurationUnsupportedMediaType) GetPayload() interface{} {
	return o.Payload
}

func (o *PostGroupsGroupIDClusterConfigurationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
