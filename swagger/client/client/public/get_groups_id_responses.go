// Code generated by go-swagger; DO NOT EDIT.

package public

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dhis2-sre/im-users/swagger/client/models"
)

// GetGroupsIDReader is a Reader for the GetGroupsID structure.
type GetGroupsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGroupsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGroupsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetGroupsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetGroupsIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGroupsIDOK creates a GetGroupsIDOK with default headers values
func NewGetGroupsIDOK() *GetGroupsIDOK {
	return &GetGroupsIDOK{}
}

/* GetGroupsIDOK describes a response with status code 200, with default header values.

OK
*/
type GetGroupsIDOK struct {
	Payload *models.DtoGroup
}

func (o *GetGroupsIDOK) Error() string {
	return fmt.Sprintf("[GET /groups/{id}][%d] getGroupsIdOK  %+v", 200, o.Payload)
}
func (o *GetGroupsIDOK) GetPayload() *models.DtoGroup {
	return o.Payload
}

func (o *GetGroupsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DtoGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupsIDForbidden creates a GetGroupsIDForbidden with default headers values
func NewGetGroupsIDForbidden() *GetGroupsIDForbidden {
	return &GetGroupsIDForbidden{}
}

/* GetGroupsIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetGroupsIDForbidden struct {
	Payload interface{}
}

func (o *GetGroupsIDForbidden) Error() string {
	return fmt.Sprintf("[GET /groups/{id}][%d] getGroupsIdForbidden  %+v", 403, o.Payload)
}
func (o *GetGroupsIDForbidden) GetPayload() interface{} {
	return o.Payload
}

func (o *GetGroupsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupsIDUnsupportedMediaType creates a GetGroupsIDUnsupportedMediaType with default headers values
func NewGetGroupsIDUnsupportedMediaType() *GetGroupsIDUnsupportedMediaType {
	return &GetGroupsIDUnsupportedMediaType{}
}

/* GetGroupsIDUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type
*/
type GetGroupsIDUnsupportedMediaType struct {
	Payload interface{}
}

func (o *GetGroupsIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /groups/{id}][%d] getGroupsIdUnsupportedMediaType  %+v", 415, o.Payload)
}
func (o *GetGroupsIDUnsupportedMediaType) GetPayload() interface{} {
	return o.Payload
}

func (o *GetGroupsIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
