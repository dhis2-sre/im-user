// Code generated by go-swagger; DO NOT EDIT.

package public

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/dhis2-sre/im-users/swagger/client/models"
)

// NewPostSignupParams creates a new PostSignupParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostSignupParams() *PostSignupParams {
	return &PostSignupParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostSignupParamsWithTimeout creates a new PostSignupParams object
// with the ability to set a timeout on a request.
func NewPostSignupParamsWithTimeout(timeout time.Duration) *PostSignupParams {
	return &PostSignupParams{
		timeout: timeout,
	}
}

// NewPostSignupParamsWithContext creates a new PostSignupParams object
// with the ability to set a context for a request.
func NewPostSignupParamsWithContext(ctx context.Context) *PostSignupParams {
	return &PostSignupParams{
		Context: ctx,
	}
}

// NewPostSignupParamsWithHTTPClient creates a new PostSignupParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostSignupParamsWithHTTPClient(client *http.Client) *PostSignupParams {
	return &PostSignupParams{
		HTTPClient: client,
	}
}

/* PostSignupParams contains all the parameters to send to the API endpoint
   for the post signup operation.

   Typically these are written to a http.Request.
*/
type PostSignupParams struct {

	/* SignupRequest.

	   Email and Password json object
	*/
	SignupRequest *models.GithubComDhis2SreImUsersPkgUserSignupRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post signup params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostSignupParams) WithDefaults() *PostSignupParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post signup params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostSignupParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post signup params
func (o *PostSignupParams) WithTimeout(timeout time.Duration) *PostSignupParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post signup params
func (o *PostSignupParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post signup params
func (o *PostSignupParams) WithContext(ctx context.Context) *PostSignupParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post signup params
func (o *PostSignupParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post signup params
func (o *PostSignupParams) WithHTTPClient(client *http.Client) *PostSignupParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post signup params
func (o *PostSignupParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSignupRequest adds the signupRequest to the post signup params
func (o *PostSignupParams) WithSignupRequest(signupRequest *models.GithubComDhis2SreImUsersPkgUserSignupRequest) *PostSignupParams {
	o.SetSignupRequest(signupRequest)
	return o
}

// SetSignupRequest adds the signupRequest to the post signup params
func (o *PostSignupParams) SetSignupRequest(signupRequest *models.GithubComDhis2SreImUsersPkgUserSignupRequest) {
	o.SignupRequest = signupRequest
}

// WriteToRequest writes these params to a swagger request
func (o *PostSignupParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.SignupRequest != nil {
		if err := r.SetBodyParam(o.SignupRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
