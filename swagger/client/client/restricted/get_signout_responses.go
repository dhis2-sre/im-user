// Code generated by go-swagger; DO NOT EDIT.

package restricted

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetSignoutReader is a Reader for the GetSignout structure.
type GetSignoutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSignoutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSignoutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSignoutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSignoutOK creates a GetSignoutOK with default headers values
func NewGetSignoutOK() *GetSignoutOK {
	return &GetSignoutOK{}
}

/* GetSignoutOK describes a response with status code 200, with default header values.

OK
*/
type GetSignoutOK struct {
	Payload interface{}
}

func (o *GetSignoutOK) Error() string {
	return fmt.Sprintf("[GET /signout][%d] getSignoutOK  %+v", 200, o.Payload)
}
func (o *GetSignoutOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetSignoutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSignoutUnauthorized creates a GetSignoutUnauthorized with default headers values
func NewGetSignoutUnauthorized() *GetSignoutUnauthorized {
	return &GetSignoutUnauthorized{}
}

/* GetSignoutUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetSignoutUnauthorized struct {
	Payload interface{}
}

func (o *GetSignoutUnauthorized) Error() string {
	return fmt.Sprintf("[GET /signout][%d] getSignoutUnauthorized  %+v", 401, o.Payload)
}
func (o *GetSignoutUnauthorized) GetPayload() interface{} {
	return o.Payload
}

func (o *GetSignoutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
