// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dhis2-sre/im-user/swagger/sdk/models"
)

// AddClusterConfigurationToGroupReader is a Reader for the AddClusterConfigurationToGroup structure.
type AddClusterConfigurationToGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddClusterConfigurationToGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddClusterConfigurationToGroupCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddClusterConfigurationToGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAddClusterConfigurationToGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddClusterConfigurationToGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewAddClusterConfigurationToGroupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddClusterConfigurationToGroupCreated creates a AddClusterConfigurationToGroupCreated with default headers values
func NewAddClusterConfigurationToGroupCreated() *AddClusterConfigurationToGroupCreated {
	return &AddClusterConfigurationToGroupCreated{}
}

/* AddClusterConfigurationToGroupCreated describes a response with status code 201, with default header values.

Group
*/
type AddClusterConfigurationToGroupCreated struct {
	Payload *models.Group
}

// IsSuccess returns true when this add cluster configuration to group created response has a 2xx status code
func (o *AddClusterConfigurationToGroupCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add cluster configuration to group created response has a 3xx status code
func (o *AddClusterConfigurationToGroupCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add cluster configuration to group created response has a 4xx status code
func (o *AddClusterConfigurationToGroupCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add cluster configuration to group created response has a 5xx status code
func (o *AddClusterConfigurationToGroupCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add cluster configuration to group created response a status code equal to that given
func (o *AddClusterConfigurationToGroupCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add cluster configuration to group created response
func (o *AddClusterConfigurationToGroupCreated) Code() int {
	return 201
}

func (o *AddClusterConfigurationToGroupCreated) Error() string {
	return fmt.Sprintf("[POST /groups/{group}/cluster-configuration][%d] addClusterConfigurationToGroupCreated  %+v", 201, o.Payload)
}

func (o *AddClusterConfigurationToGroupCreated) String() string {
	return fmt.Sprintf("[POST /groups/{group}/cluster-configuration][%d] addClusterConfigurationToGroupCreated  %+v", 201, o.Payload)
}

func (o *AddClusterConfigurationToGroupCreated) GetPayload() *models.Group {
	return o.Payload
}

func (o *AddClusterConfigurationToGroupCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Group)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddClusterConfigurationToGroupBadRequest creates a AddClusterConfigurationToGroupBadRequest with default headers values
func NewAddClusterConfigurationToGroupBadRequest() *AddClusterConfigurationToGroupBadRequest {
	return &AddClusterConfigurationToGroupBadRequest{}
}

/* AddClusterConfigurationToGroupBadRequest describes a response with status code 400, with default header values.

AddClusterConfigurationToGroupBadRequest add cluster configuration to group bad request
*/
type AddClusterConfigurationToGroupBadRequest struct {
}

// IsSuccess returns true when this add cluster configuration to group bad request response has a 2xx status code
func (o *AddClusterConfigurationToGroupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add cluster configuration to group bad request response has a 3xx status code
func (o *AddClusterConfigurationToGroupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add cluster configuration to group bad request response has a 4xx status code
func (o *AddClusterConfigurationToGroupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add cluster configuration to group bad request response has a 5xx status code
func (o *AddClusterConfigurationToGroupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add cluster configuration to group bad request response a status code equal to that given
func (o *AddClusterConfigurationToGroupBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add cluster configuration to group bad request response
func (o *AddClusterConfigurationToGroupBadRequest) Code() int {
	return 400
}

func (o *AddClusterConfigurationToGroupBadRequest) Error() string {
	return fmt.Sprintf("[POST /groups/{group}/cluster-configuration][%d] addClusterConfigurationToGroupBadRequest ", 400)
}

func (o *AddClusterConfigurationToGroupBadRequest) String() string {
	return fmt.Sprintf("[POST /groups/{group}/cluster-configuration][%d] addClusterConfigurationToGroupBadRequest ", 400)
}

func (o *AddClusterConfigurationToGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddClusterConfigurationToGroupUnauthorized creates a AddClusterConfigurationToGroupUnauthorized with default headers values
func NewAddClusterConfigurationToGroupUnauthorized() *AddClusterConfigurationToGroupUnauthorized {
	return &AddClusterConfigurationToGroupUnauthorized{}
}

/* AddClusterConfigurationToGroupUnauthorized describes a response with status code 401, with default header values.

AddClusterConfigurationToGroupUnauthorized add cluster configuration to group unauthorized
*/
type AddClusterConfigurationToGroupUnauthorized struct {
}

// IsSuccess returns true when this add cluster configuration to group unauthorized response has a 2xx status code
func (o *AddClusterConfigurationToGroupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add cluster configuration to group unauthorized response has a 3xx status code
func (o *AddClusterConfigurationToGroupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add cluster configuration to group unauthorized response has a 4xx status code
func (o *AddClusterConfigurationToGroupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add cluster configuration to group unauthorized response has a 5xx status code
func (o *AddClusterConfigurationToGroupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add cluster configuration to group unauthorized response a status code equal to that given
func (o *AddClusterConfigurationToGroupUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add cluster configuration to group unauthorized response
func (o *AddClusterConfigurationToGroupUnauthorized) Code() int {
	return 401
}

func (o *AddClusterConfigurationToGroupUnauthorized) Error() string {
	return fmt.Sprintf("[POST /groups/{group}/cluster-configuration][%d] addClusterConfigurationToGroupUnauthorized ", 401)
}

func (o *AddClusterConfigurationToGroupUnauthorized) String() string {
	return fmt.Sprintf("[POST /groups/{group}/cluster-configuration][%d] addClusterConfigurationToGroupUnauthorized ", 401)
}

func (o *AddClusterConfigurationToGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddClusterConfigurationToGroupForbidden creates a AddClusterConfigurationToGroupForbidden with default headers values
func NewAddClusterConfigurationToGroupForbidden() *AddClusterConfigurationToGroupForbidden {
	return &AddClusterConfigurationToGroupForbidden{}
}

/* AddClusterConfigurationToGroupForbidden describes a response with status code 403, with default header values.

AddClusterConfigurationToGroupForbidden add cluster configuration to group forbidden
*/
type AddClusterConfigurationToGroupForbidden struct {
}

// IsSuccess returns true when this add cluster configuration to group forbidden response has a 2xx status code
func (o *AddClusterConfigurationToGroupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add cluster configuration to group forbidden response has a 3xx status code
func (o *AddClusterConfigurationToGroupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add cluster configuration to group forbidden response has a 4xx status code
func (o *AddClusterConfigurationToGroupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add cluster configuration to group forbidden response has a 5xx status code
func (o *AddClusterConfigurationToGroupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add cluster configuration to group forbidden response a status code equal to that given
func (o *AddClusterConfigurationToGroupForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add cluster configuration to group forbidden response
func (o *AddClusterConfigurationToGroupForbidden) Code() int {
	return 403
}

func (o *AddClusterConfigurationToGroupForbidden) Error() string {
	return fmt.Sprintf("[POST /groups/{group}/cluster-configuration][%d] addClusterConfigurationToGroupForbidden ", 403)
}

func (o *AddClusterConfigurationToGroupForbidden) String() string {
	return fmt.Sprintf("[POST /groups/{group}/cluster-configuration][%d] addClusterConfigurationToGroupForbidden ", 403)
}

func (o *AddClusterConfigurationToGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddClusterConfigurationToGroupUnsupportedMediaType creates a AddClusterConfigurationToGroupUnsupportedMediaType with default headers values
func NewAddClusterConfigurationToGroupUnsupportedMediaType() *AddClusterConfigurationToGroupUnsupportedMediaType {
	return &AddClusterConfigurationToGroupUnsupportedMediaType{}
}

/* AddClusterConfigurationToGroupUnsupportedMediaType describes a response with status code 415, with default header values.

AddClusterConfigurationToGroupUnsupportedMediaType add cluster configuration to group unsupported media type
*/
type AddClusterConfigurationToGroupUnsupportedMediaType struct {
}

// IsSuccess returns true when this add cluster configuration to group unsupported media type response has a 2xx status code
func (o *AddClusterConfigurationToGroupUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add cluster configuration to group unsupported media type response has a 3xx status code
func (o *AddClusterConfigurationToGroupUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add cluster configuration to group unsupported media type response has a 4xx status code
func (o *AddClusterConfigurationToGroupUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this add cluster configuration to group unsupported media type response has a 5xx status code
func (o *AddClusterConfigurationToGroupUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this add cluster configuration to group unsupported media type response a status code equal to that given
func (o *AddClusterConfigurationToGroupUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

// Code gets the status code for the add cluster configuration to group unsupported media type response
func (o *AddClusterConfigurationToGroupUnsupportedMediaType) Code() int {
	return 415
}

func (o *AddClusterConfigurationToGroupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /groups/{group}/cluster-configuration][%d] addClusterConfigurationToGroupUnsupportedMediaType ", 415)
}

func (o *AddClusterConfigurationToGroupUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /groups/{group}/cluster-configuration][%d] addClusterConfigurationToGroupUnsupportedMediaType ", 415)
}

func (o *AddClusterConfigurationToGroupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
