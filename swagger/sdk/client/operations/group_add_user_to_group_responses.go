// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dhis2-sre/im-user/swagger/sdk/models"
)

// GroupAddUserToGroupReader is a Reader for the GroupAddUserToGroup structure.
type GroupAddUserToGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GroupAddUserToGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewGroupAddUserToGroupCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGroupAddUserToGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGroupAddUserToGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGroupAddUserToGroupUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGroupAddUserToGroupCreated creates a GroupAddUserToGroupCreated with default headers values
func NewGroupAddUserToGroupCreated() *GroupAddUserToGroupCreated {
	return &GroupAddUserToGroupCreated{}
}

/* GroupAddUserToGroupCreated describes a response with status code 201, with default header values.

Group
*/
type GroupAddUserToGroupCreated struct {
	Payload *models.Group
}

func (o *GroupAddUserToGroupCreated) Error() string {
	return fmt.Sprintf("[POST /groups/{groupId}/users/{userId}][%d] groupAddUserToGroupCreated  %+v", 201, o.Payload)
}
func (o *GroupAddUserToGroupCreated) GetPayload() *models.Group {
	return o.Payload
}

func (o *GroupAddUserToGroupCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Group)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGroupAddUserToGroupBadRequest creates a GroupAddUserToGroupBadRequest with default headers values
func NewGroupAddUserToGroupBadRequest() *GroupAddUserToGroupBadRequest {
	return &GroupAddUserToGroupBadRequest{}
}

/* GroupAddUserToGroupBadRequest describes a response with status code 400, with default header values.

GroupAddUserToGroupBadRequest group add user to group bad request
*/
type GroupAddUserToGroupBadRequest struct {
}

func (o *GroupAddUserToGroupBadRequest) Error() string {
	return fmt.Sprintf("[POST /groups/{groupId}/users/{userId}][%d] groupAddUserToGroupBadRequest ", 400)
}

func (o *GroupAddUserToGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGroupAddUserToGroupForbidden creates a GroupAddUserToGroupForbidden with default headers values
func NewGroupAddUserToGroupForbidden() *GroupAddUserToGroupForbidden {
	return &GroupAddUserToGroupForbidden{}
}

/* GroupAddUserToGroupForbidden describes a response with status code 403, with default header values.

GroupAddUserToGroupForbidden group add user to group forbidden
*/
type GroupAddUserToGroupForbidden struct {
}

func (o *GroupAddUserToGroupForbidden) Error() string {
	return fmt.Sprintf("[POST /groups/{groupId}/users/{userId}][%d] groupAddUserToGroupForbidden ", 403)
}

func (o *GroupAddUserToGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGroupAddUserToGroupUnsupportedMediaType creates a GroupAddUserToGroupUnsupportedMediaType with default headers values
func NewGroupAddUserToGroupUnsupportedMediaType() *GroupAddUserToGroupUnsupportedMediaType {
	return &GroupAddUserToGroupUnsupportedMediaType{}
}

/* GroupAddUserToGroupUnsupportedMediaType describes a response with status code 415, with default header values.

GroupAddUserToGroupUnsupportedMediaType group add user to group unsupported media type
*/
type GroupAddUserToGroupUnsupportedMediaType struct {
}

func (o *GroupAddUserToGroupUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /groups/{groupId}/users/{userId}][%d] groupAddUserToGroupUnsupportedMediaType ", 415)
}

func (o *GroupAddUserToGroupUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
