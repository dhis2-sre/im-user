// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GroupNameToIDReader is a Reader for the GroupNameToID structure.
type GroupNameToIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GroupNameToIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGroupNameToIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGroupNameToIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGroupNameToIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGroupNameToIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGroupNameToIDUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGroupNameToIDOK creates a GroupNameToIDOK with default headers values
func NewGroupNameToIDOK() *GroupNameToIDOK {
	return &GroupNameToIDOK{}
}

/* GroupNameToIDOK describes a response with status code 200, with default header values.

GroupNameToIDOK group name to Id o k
*/
type GroupNameToIDOK struct {
}

func (o *GroupNameToIDOK) Error() string {
	return fmt.Sprintf("[GET /groups-name-to-id/{name}][%d] groupNameToIdOK ", 200)
}

func (o *GroupNameToIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGroupNameToIDUnauthorized creates a GroupNameToIDUnauthorized with default headers values
func NewGroupNameToIDUnauthorized() *GroupNameToIDUnauthorized {
	return &GroupNameToIDUnauthorized{}
}

/* GroupNameToIDUnauthorized describes a response with status code 401, with default header values.

GroupNameToIDUnauthorized group name to Id unauthorized
*/
type GroupNameToIDUnauthorized struct {
}

func (o *GroupNameToIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /groups-name-to-id/{name}][%d] groupNameToIdUnauthorized ", 401)
}

func (o *GroupNameToIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGroupNameToIDForbidden creates a GroupNameToIDForbidden with default headers values
func NewGroupNameToIDForbidden() *GroupNameToIDForbidden {
	return &GroupNameToIDForbidden{}
}

/* GroupNameToIDForbidden describes a response with status code 403, with default header values.

GroupNameToIDForbidden group name to Id forbidden
*/
type GroupNameToIDForbidden struct {
}

func (o *GroupNameToIDForbidden) Error() string {
	return fmt.Sprintf("[GET /groups-name-to-id/{name}][%d] groupNameToIdForbidden ", 403)
}

func (o *GroupNameToIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGroupNameToIDNotFound creates a GroupNameToIDNotFound with default headers values
func NewGroupNameToIDNotFound() *GroupNameToIDNotFound {
	return &GroupNameToIDNotFound{}
}

/* GroupNameToIDNotFound describes a response with status code 404, with default header values.

GroupNameToIDNotFound group name to Id not found
*/
type GroupNameToIDNotFound struct {
}

func (o *GroupNameToIDNotFound) Error() string {
	return fmt.Sprintf("[GET /groups-name-to-id/{name}][%d] groupNameToIdNotFound ", 404)
}

func (o *GroupNameToIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGroupNameToIDUnsupportedMediaType creates a GroupNameToIDUnsupportedMediaType with default headers values
func NewGroupNameToIDUnsupportedMediaType() *GroupNameToIDUnsupportedMediaType {
	return &GroupNameToIDUnsupportedMediaType{}
}

/* GroupNameToIDUnsupportedMediaType describes a response with status code 415, with default header values.

GroupNameToIDUnsupportedMediaType group name to Id unsupported media type
*/
type GroupNameToIDUnsupportedMediaType struct {
}

func (o *GroupNameToIDUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /groups-name-to-id/{name}][%d] groupNameToIdUnsupportedMediaType ", 415)
}

func (o *GroupNameToIDUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
