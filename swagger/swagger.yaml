consumes:
- application/json
- multipart/form-data
definitions:
  ClusterConfiguration:
    properties:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      GroupID:
        format: uint64
        type: integer
      ID:
        format: uint64
        type: integer
      KubernetesConfiguration:
        items:
          format: uint8
          type: integer
        type: array
      UpdatedAt:
        format: date-time
        type: string
    type: object
    x-go-package: github.com/dhis2-sre/im-users/pkg/model
  DeletedAt:
    $ref: '#/definitions/NullTime'
  Group:
    description: Group domain object defining a group
    properties:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      Hostname:
        type: string
      ID:
        format: uint64
        type: integer
      Name:
        type: string
      UpdatedAt:
        format: date-time
        type: string
      Users:
        items:
          $ref: '#/definitions/User'
        type: array
      clusterConfiguration:
        $ref: '#/definitions/ClusterConfiguration'
    type: object
    x-go-package: github.com/dhis2-sre/im-users/pkg/model
  Model:
    description: |-
      Model a basic GoLang struct which includes the following fields: ID, CreatedAt, UpdatedAt, DeletedAt
      It may be embedded into your model or you may build your own model without it
      type User struct {
      gorm.Model
      }
    properties:
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      ID:
        format: uint64
        type: integer
      UpdatedAt:
        format: date-time
        type: string
    type: object
    x-go-package: gorm.io/gorm
  NullTime:
    description: |-
      NullTime implements the Scanner interface so
      it can be used as a scan destination, similar to NullString.
    properties:
      Time:
        format: date-time
        type: string
      Valid:
        type: boolean
    title: NullTime represents a time.Time that may be null.
    type: object
    x-go-package: database/sql
  Tokens:
    description: Tokens domain object defining user tokens
    properties:
      access_token:
        type: string
        x-go-name: AccessToken
      expires_in:
        format: uint64
        type: integer
        x-go-name: ExpiresIn
      refresh_token:
        type: string
        x-go-name: RefreshToken
      token_type:
        type: string
        x-go-name: TokenType
    type: object
    x-go-package: github.com/dhis2-sre/im-users/pkg/token
  User:
    description: User domain object defining a user
    properties:
      AdminGroups:
        items:
          $ref: '#/definitions/Group'
        type: array
      CreatedAt:
        format: date-time
        type: string
      DeletedAt:
        $ref: '#/definitions/DeletedAt'
      Email:
        type: string
      Groups:
        items:
          $ref: '#/definitions/Group'
        type: array
      ID:
        format: uint64
        type: integer
      UpdatedAt:
        format: date-time
        type: string
    type: object
    x-go-package: github.com/dhis2-sre/im-users/pkg/model
info:
  contact:
    email: info@dhis2.org
    url: https://github.com/dhis2-sre/im-users
  description: User Service as part of the Instance Manager environment
  license:
    name: TODO
  termsOfService: there are no TOS at this moment, use at your own risk we take no
    responsibility
  title: Instance Manager User Service.
  version: 0.1.0
paths:
  /findbyid/{id}:
    get:
      description: Return a user by id
      operationId: getUserById
      parameters:
      - format: uint64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "200":
          description: User
          schema:
            $ref: '#/definitions/User'
        "403":
          $ref: '#/responses/Error'
        "404":
          $ref: '#/responses/Error'
        "415":
          $ref: '#/responses/Error'
  /groups/{id}:
    get:
      description: Return a group by id
      operationId: getGroupById
      parameters:
      - format: uint64
        in: path
        name: id
        required: true
        type: integer
        x-go-name: ID
      responses:
        "200":
          description: Group
          schema:
            $ref: '#/definitions/Group'
        "403":
          $ref: '#/responses/Error'
        "404":
          $ref: '#/responses/Error'
        "415":
          $ref: '#/responses/Error'
  /me:
    get:
      description: Return user details
      operationId: me
      responses:
        "200":
          description: User
          schema:
            $ref: '#/definitions/User'
        "403":
          $ref: '#/responses/Error'
        "404":
          $ref: '#/responses/Error'
        "415":
          $ref: '#/responses/Error'
      security:
      - oauth2: []
  /signin:
    post:
      description: Return user tokens
      operationId: signIn
      responses:
        "201":
          description: Tokens
          schema:
            $ref: '#/definitions/Tokens'
        "403":
          $ref: '#/responses/Error'
        "404":
          $ref: '#/responses/Error'
        "415":
          $ref: '#/responses/Error'
      security:
      - basic: []
responses:
  Error:
    description: ""
securityDefinitions:
  basicAuth:
    type: basic
  oauth2:
    flow: password
    tokenUrl: /signin
    type: oauth2
swagger: "2.0"
